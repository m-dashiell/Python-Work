# This python program solves the 6 kyu Rectangles into Squares Codewars Problem
# https://www.codewars.com/kata/55466989aeecab5aac00003e

# You will be given two dimensions

# a positive integer length
# a positive integer width
# You will return a collection or a string with the size of each of the squares.

#   sqInRect(5, 3) should return [3, 2, 1, 1]
#   sqInRect(3, 5) should return [3, 2, 1, 1]
  
#   You can see examples for your language in **"SAMPLE TESTS".**
# Notes:
# lng == wdth as a starting case would be an entirely different problem and the drawing is planned to be interpreted with lng != wdth. (See kata, Square into Squares. Protect trees! http://www.codewars.com/kata/54eb33e5bc1a25440d000891 for this problem).

# When the initial parameters are so that lng == wdth, the solution [lng] would be the most obvious but not in the spirit of this kata so, in that case, return None/nil/null/Nothing or return {} with C++, [] with Perl, Raku.

# In that case the returned structure of C will have its sz component equal to 0.


def sqInRect(x,y):

    import math

    side_length = [x,y]

    area = x * y

    side_list = []

    iteration_1 = min(side_length)

    iteration_1_area = area - iteration_1**2

    side_list.append(iteration_1)

    counter = 0

    while iteration_1_area != 0:

        counter += 1

        if (counter ** 2) > iteration_1_area:

            counter -=1 

            iteration_1_area = iteration_1_area - counter ** 2

            side_list.append(counter)

            counter = 0
            
            print(side_list)

        else:

            continue

